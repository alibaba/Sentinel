/*
 * Copyright 1999-2022 Alibaba Group Holding Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.alibaba.csp.sentinel.adapter.jdbc;

import com.alibaba.csp.sentinel.adapter.jdbc.delegate.ConnectionDelegate;

import java.sql.*;

/**
 * @author icodening
 * @date 2022.02.08
 */
public class SentinelJDBCConnection extends ConnectionDelegate {

    public SentinelJDBCConnection(Connection delegate) {
        super(delegate);
    }

    @Override
    public Statement createStatement() throws SQLException {
        return new SentinelJDBCStatement(super.createStatement());
    }

    @Override
    public Statement createStatement(int resultSetType, int resultSetConcurrency) throws SQLException {
        return new SentinelJDBCStatement(super.createStatement(resultSetType, resultSetConcurrency));
    }

    @Override
    public Statement createStatement(int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException {
        return new SentinelJDBCStatement(super.createStatement(resultSetType, resultSetConcurrency, resultSetHoldability));
    }

    @Override
    public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException {
        SentinelJDBCPreparedStatement sentinelJDBCPreparedStatement =
                new SentinelJDBCPreparedStatement(super.prepareStatement(sql, resultSetType, resultSetConcurrency, resultSetHoldability));
        sentinelJDBCPreparedStatement.setSQL(sql);
        return sentinelJDBCPreparedStatement;
    }

    @Override
    public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException {
        SentinelJDBCPreparedStatement sentinelJDBCPreparedStatement =
                new SentinelJDBCPreparedStatement(super.prepareStatement(sql, autoGeneratedKeys));
        sentinelJDBCPreparedStatement.setSQL(sql);
        return sentinelJDBCPreparedStatement;
    }

    @Override
    public PreparedStatement prepareStatement(String sql, int[] columnIndexes) throws SQLException {
        SentinelJDBCPreparedStatement sentinelJDBCPreparedStatement =
                new SentinelJDBCPreparedStatement(super.prepareStatement(sql, columnIndexes));
        sentinelJDBCPreparedStatement.setSQL(sql);
        return sentinelJDBCPreparedStatement;
    }

    @Override
    public PreparedStatement prepareStatement(String sql, String[] columnNames) throws SQLException {
        SentinelJDBCPreparedStatement sentinelJDBCPreparedStatement =
                new SentinelJDBCPreparedStatement(super.prepareStatement(sql, columnNames));
        sentinelJDBCPreparedStatement.setSQL(sql);
        return sentinelJDBCPreparedStatement;
    }

    @Override
    public PreparedStatement prepareStatement(String sql) throws SQLException {
        SentinelJDBCPreparedStatement sentinelJDBCPreparedStatement =
                new SentinelJDBCPreparedStatement(super.prepareStatement(sql));
        sentinelJDBCPreparedStatement.setSQL(sql);
        return sentinelJDBCPreparedStatement;
    }

    @Override
    public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency) throws SQLException {
        SentinelJDBCPreparedStatement sentinelJDBCPreparedStatement =
                new SentinelJDBCPreparedStatement(super.prepareStatement(sql, resultSetType, resultSetConcurrency));
        sentinelJDBCPreparedStatement.setSQL(sql);
        return sentinelJDBCPreparedStatement;
    }

    @Override
    public CallableStatement prepareCall(String sql) throws SQLException {
        SentinelCallableStatement sentinelCallableStatement = new SentinelCallableStatement(super.prepareCall(sql));
        sentinelCallableStatement.setSQL(sql);
        return sentinelCallableStatement;
    }
}
